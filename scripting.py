# -*- coding: utf-8 -*-
"""Untitled16.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fLV0XEGXiDTqg-f5sSZK0K1cjiNTpVdl
"""

import csv
import random
import requests
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

# Constants
CSV_URL = "https://react-test.aventusinformatics.com/media/assets/test_cases.csv"
TEST_RESULTS_FILE = "test_results.csv"
EMAIL_REPORT = False  # Set to True to enable email sending

# Download test cases CSV
def download_csv(url, filename="test_cases.csv"):
    response = requests.get(url)
    if response.status_code == 200:
        with open(filename, "wb") as file:
            file.write(response.content)
        print(f"‚úÖ Downloaded {filename}")
    else:
        print("‚ùå Failed to download CSV file")
        exit(1)

# Read test cases from CSV
def read_test_cases(filename="test_cases.csv"):
    test_cases = []
    with open(filename, "r") as file:
        reader = csv.reader(file)
        headers = next(reader)  # Read header
        for row in reader:
            test_cases.append(row)
    return headers, test_cases

# Execute test cases (simulate Pass/Fail)
def execute_tests(test_cases):
    results = []
    passed = 0
    failed = 0
    for test in test_cases:
        test_id, description = test[0], test[1]  # Assuming first 2 columns
        status = random.choice(["Pass", "Fail"])
        if status == "Pass":
            passed += 1
        else:
            failed += 1
        results.append([test_id, description, status])
    return results, passed, failed

# Write test results to CSV
def write_test_results(results, filename=TEST_RESULTS_FILE):
    with open(filename, "w", newline="") as file:
        writer = csv.writer(file)
        writer.writerow(["Test ID", "Description", "Status"])
        writer.writerows(results)
    print(f"‚úÖ Test results saved in {filename}")

# Send email with test report (Optional)
def send_email_report():
    sender_email = "your-email@example.com"
    receiver_email = "recipient@example.com"
    password = "your-email-password"

    with open(TEST_RESULTS_FILE, "r") as file:
        csv_content = file.read()

    msg = MIMEMultipart()
    msg["From"] = sender_email
    msg["To"] = receiver_email
    msg["Subject"] = "Automated Test Report"

    msg.attach(MIMEText(f"Attached is the test report.\n\n{csv_content}", "plain"))

    try:
        server = smtplib.SMTP("smtp.gmail.com", 587)
        server.starttls()
        server.login(sender_email, password)
        server.sendmail(sender_email, receiver_email, msg.as_string())
        server.quit()
        print("‚úÖ Email sent successfully!")
    except Exception as e:
        print(f"‚ùå Email sending failed: {e}")

# Main execution flow
if __name__ == "__main__":
    download_csv(CSV_URL)
    headers, test_cases = read_test_cases()
    results, passed, failed = execute_tests(test_cases)
    write_test_results(results)

    # Print summary
    print("\nüìä Test Execution Summary:")
    print(f"‚úî Passed: {passed}")
    print(f"‚ùå Failed: {failed}")
    print(f"üìÅ Results saved in {TEST_RESULTS_FILE}")

    # Send email (optional)
    if EMAIL_REPORT:
        send_email_report()